service: worksheets-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: us-east-1

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: worksheets
    stripeSecretKey: ${env:STRIPE_SECRET_KEY}

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in createWorksheet.js
  # - path: url path is /worksheets
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  createWorksheet:
    handler: createWorksheet.main
    events:
      - http:
          path: worksheets
          method: post
          cors: true
          authorizer: aws_iam

  getWorksheet:
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: url path is /worksheets/{id}
    # - method: GET request
    handler: getWorksheet.main
    events:
      - http:
          path: worksheets/{id}
          method: get
          cors: true
          authorizer: aws_iam

  listWorksheets:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /worksheets
    # - method: GET request
    handler: listWorksheets.main
    events:
      - http:
          path: worksheets
          method: get
          cors: true
          authorizer: aws_iam

  deleteWorksheet:
    # Defines an HTTP API endpoint that calls the main function in delete.js
    # - path: url path is /worksheets/{id}
    # - method: DELETE request
    handler: deleteWorksheet.main
    events:
      - http:
          path: worksheets/{id}
          method: delete
          cors: true
          authorizer: aws_iam

  billing:
    # Defines an HTTP API endpoint that calls the main function in billing.js
    # - path: url path is /billing
    # - method: POST request
    handler: billing.main
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizer: aws_iam

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
